/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package zadania;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author acer
 */
public class Haszowanie extends javax.swing.JFrame {

    /**
     * Creates new form Haszowanie
     */
    public Haszowanie() {
        initComponents();
        setTitle("Haszowanie");
        jTextField1.setEditable(false);
    }

    private char[] actualValue;
    private int i, counter = 3;
    private String codeText, randomCode = "";

    final private static Random random = new Random();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setForeground(new java.awt.Color(0, 204, 0));

        jTextArea1.setBackground(new java.awt.Color(51, 51, 51));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(102, 255, 0));
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 0), 5));
        jTextArea1.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setEditable(false);
        jTextArea2.setBackground(new java.awt.Color(51, 51, 51));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(153, 255, 0));
        jTextArea2.setRows(5);
        jTextArea2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 0), 5));
        jTextArea2.setEnabled(false);
        jScrollPane2.setViewportView(jTextArea2);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 255, 0));
        jButton1.setText("Zakoduj");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 0), 3));
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(102, 255, 0));
        jButton2.setText("Wyczyść");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 0), 3));
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(102, 255, 0));
        jButton3.setText("Kod dost");
        jButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 0), 3));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jRadioButton1.setBackground(new java.awt.Color(51, 51, 51));
        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(102, 255, 0));
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("KODOWANIE");
        jRadioButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 0), 3));
        jRadioButton1.setEnabled(false);
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setBackground(new java.awt.Color(51, 51, 51));
        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jRadioButton2.setForeground(new java.awt.Color(102, 255, 0));
        jRadioButton2.setText("DEKODOWANIE");
        jRadioButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 0), 3));
        jRadioButton2.setEnabled(false);
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 255, 0));
        jLabel1.setText("Kod");

        jTextField1.setBackground(new java.awt.Color(51, 51, 51));
        jTextField1.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(102, 255, 0));
        jTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 0), 4));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 255, 0));
        jLabel2.setText("Zakodowany tekst");

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(102, 255, 0));
        jButton4.setText("Zatwierdz");
        jButton4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 0), 3));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(102, 255, 0));
        jButton5.setText("Odczyt");
        jButton5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 0), 3));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addGap(52, 52, 52)
                        .addComponent(jRadioButton2)
                        .addGap(66, 66, 66))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(140, 140, 140)))
                        .addGap(62, 62, 62))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(1, 1, 1)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTextArea1.setText("");
        jTextArea2.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String text = jTextArea1.getText();
        jTextArea2.setText("");

        char actualValue[] = text.toCharArray();

        for (int i = 0; i < actualValue.length; i++) {

            switch (actualValue[i]) {
                case '0', '1', '2', '3', '4', '5', '6', '7', '8', '9':
                    JOptionPane.showMessageDialog(this, "Nie wstawiaj liczb !", "Informacja", JOptionPane.ERROR_MESSAGE);
                    return;
            }
        }
//Małe  i duże litery
        if (jRadioButton1.isSelected()) {
            for (int i = 0; i < actualValue.length; i++) {

                switch (actualValue[i]) {
                    case 'a':
                        actualValue[i] = 'G';
                        break;
                    case 'b':
                        actualValue[i] = 'J';
                        break;
                    case 'c':
                        actualValue[i] = 'Z';
                        break;
                    case 'd':
                        actualValue[i] = 'C';
                        break;
                    case 'e':
                        actualValue[i] = 'P';
                        break;
                    case 'f':
                        actualValue[i] = 'H';
                        break;
                    case 'g':
                        actualValue[i] = 'W';
                        break;
                    case 'h':
                        actualValue[i] = 'O';
                        break;
                    case 'i':
                        actualValue[i] = 'X';
                        break;
                    case 'j':
                        actualValue[i] = 'V';
                        break;
                    case 'k':
                        actualValue[i] = 'B';
                        break;
                    case 'l':
                        actualValue[i] = 'F';
                        break;
                    case 'm':
                        actualValue[i] = 'Y';
                        break;
                    case 'n':
                        actualValue[i] = 'S';
                        break;
                    case 'o':
                        actualValue[i] = 'K';
                        break;
                    case 'p':
                        actualValue[i] = 'M';
                        break;
                    case 'q':
                        actualValue[i] = 'L';
                        break;
                    case 'r':
                        actualValue[i] = 'U';
                        break;
                    case 's':
                        actualValue[i] = 'I';
                        break;
                    case 't':
                        actualValue[i] = 'N';
                        break;
                    case 'u':
                        actualValue[i] = 'D';
                        break;
                    case 'v':
                        actualValue[i] = 'Q';
                        break;
                    case 'w':
                        actualValue[i] = 'A';
                        break;
                    case 'x':
                        actualValue[i] = 'E';
                        break;
                    case 'y':
                        actualValue[i] = 'R';
                        break;
                    case 'z':
                        actualValue[i] = 'T';
                        break;
                    case 'ó':
                        actualValue[i] = 'Ą';
                        break;
                    case 'ł':
                        actualValue[i] = 'Ć';
                        break;
                    case 'ź':
                        actualValue[i] = 'Ę';
                        break;
                    case 'ż':
                        actualValue[i] = 'Ł';
                        break;
                    case 'ś':
                        actualValue[i] = 'Ń';
                        break;
                    case 'ć':
                        actualValue[i] = 'Ó';
                        break;
                    case 'ń':
                        actualValue[i] = 'Ź';
                        break;
                    case 'ą':
                        actualValue[i] = 'Ż';
                        break;
                    case 'A':
                        actualValue[i] = 'g';
                        break;
                    case 'B':
                        actualValue[i] = 'j';
                        break;
                    case 'C':
                        actualValue[i] = 'z';
                        break;
                    case 'D':
                        actualValue[i] = 'c';
                        break;
                    case 'E':
                        actualValue[i] = 'p';
                        break;
                    case 'F':
                        actualValue[i] = 'h';
                        break;
                    case 'G':
                        actualValue[i] = 'w';
                        break;
                    case 'H':
                        actualValue[i] = 'o';
                        break;
                    case 'I':
                        actualValue[i] = 'x';
                        break;
                    case 'J':
                        actualValue[i] = 'v';
                        break;
                    case 'K':
                        actualValue[i] = 'b';
                        break;
                    case 'L':
                        actualValue[i] = 'f';
                        break;
                    case 'M':
                        actualValue[i] = 'y';
                        break;
                    case 'N':
                        actualValue[i] = 's';
                        break;
                    case 'O':
                        actualValue[i] = 'k';
                        break;
                    case 'P':
                        actualValue[i] = 'm';
                        break;
                    case 'Q':
                        actualValue[i] = 'l';
                        break;
                    case 'R':
                        actualValue[i] = 'u';
                        break;
                    case 'S':
                        actualValue[i] = 'i';
                        break;
                    case 'T':
                        actualValue[i] = 'n';
                        break;
                    case 'U':
                        actualValue[i] = 'd';
                        break;
                    case 'V':
                        actualValue[i] = 'q';
                        break;
                    case 'W':
                        actualValue[i] = 'a';
                        break;
                    case 'X':
                        actualValue[i] = 'e';
                        break;
                    case 'Y':
                        actualValue[i] = 'r';
                        break;
                    case 'Z':
                        actualValue[i] = 't';
                        break;
                    case 'Ó':
                        actualValue[i] = 'ą';
                        break;
                    case 'Ł':
                        actualValue[i] = 'ć';
                        break;
                    case 'Ź':
                        actualValue[i] = 'ę';
                        break;
                    case 'Ż':
                        actualValue[i] = 'ł';
                        break;
                    case 'Ś':
                        actualValue[i] = 'ń';
                        break;
                    case 'Ć':
                        actualValue[i] = 'ó';
                        break;
                    case 'Ń':
                        actualValue[i] = 'ź';
                        break;
                    case 'Ą':
                        actualValue[i] = 'ż';
                        break;
                    default:
                        break;
                }
            }
        } else {
            for (int i = 0; i < actualValue.length; i++) {

                switch (actualValue[i]) {
                    case 'g':
                        actualValue[i] = 'A';
                        break;
                    case 'j':
                        actualValue[i] = 'B';
                        break;
                    case 'z':
                        actualValue[i] = 'C';
                        break;
                    case 'c':
                        actualValue[i] = 'D';
                        break;
                    case 'p':
                        actualValue[i] = 'M';
                        break;
                    case 'h':
                        actualValue[i] = 'J';
                        break;
                    case 'w':
                        actualValue[i] = 'G';
                        break;
                    case 'o':
                        actualValue[i] = 'K';
                        break;
                    case 'x':
                        actualValue[i] = 'I';
                        break;
                    case 'v':
                        actualValue[i] = 'J';
                        break;
                    case 'b':
                        actualValue[i] = 'K';
                        break;
                    case 'f':
                        actualValue[i] = 'L';
                        break;
                    case 'y':
                        actualValue[i] = 'M';
                        break;
                    case 's':
                        actualValue[i] = 'N';
                        break;
                    case 'k':
                        actualValue[i] = 'O';
                        break;
                    case 'm':
                        actualValue[i] = 'P';
                        break;
                    case 'l':
                        actualValue[i] = 'Q';
                        break;
                    case 'u':
                        actualValue[i] = 'R';
                        break;
                    case 'i':
                        actualValue[i] = 'S';
                        break;
                    case 'n':
                        actualValue[i] = 'T';
                        break;
                    case 'd':
                        actualValue[i] = 'U';
                        break;
                    case 'q':
                        actualValue[i] = 'V';
                        break;
                    case 'a':
                        actualValue[i] = 'W';
                        break;
                    case 'e':
                        actualValue[i] = 'X';
                        break;
                    case 'r':
                        actualValue[i] = 'Y';
                        break;
                    case 't':
                        actualValue[i] = 'Z';
                        break;
                    case 'ą':
                        actualValue[i] = 'Ó';
                        break;
                    case 'ć':
                        actualValue[i] = 'Ł';
                        break;
                    case 'ę':
                        actualValue[i] = 'Ź';
                        break;
                    case 'ł':
                        actualValue[i] = 'Ż';
                        break;
                    case 'ń':
                        actualValue[i] = 'Ś';
                        break;
                    case 'ó':
                        actualValue[i] = 'Ć';
                        break;
                    case 'ź':
                        actualValue[i] = 'Ń';
                        break;
                    case 'ż':
                        actualValue[i] = 'Ą';
                        break;
                    case 'G':
                        actualValue[i] = 'a';
                        break;
                    case 'J':
                        actualValue[i] = 'b';
                        break;
                    case 'Z':
                        actualValue[i] = 'c';
                        break;
                    case 'C':
                        actualValue[i] = 'd';
                        break;
                    case 'P':
                        actualValue[i] = 'e';
                        break;
                    case 'H':
                        actualValue[i] = 'f';
                        break;
                    case 'W':
                        actualValue[i] = 'g';
                        break;
                    case 'O':
                        actualValue[i] = 'h';
                        break;
                    case 'X':
                        actualValue[i] = 'i';
                        break;
                    case 'V':
                        actualValue[i] = 'j';
                        break;
                    case 'B':
                        actualValue[i] = 'k';
                        break;
                    case 'F':
                        actualValue[i] = 'l';
                        break;
                    case 'Y':
                        actualValue[i] = 'm';
                        break;
                    case 'S':
                        actualValue[i] = 'n';
                        break;
                    case 'K':
                        actualValue[i] = 'o';
                        break;
                    case 'M':
                        actualValue[i] = 'p';
                        break;
                    case 'L':
                        actualValue[i] = 'q';
                        break;
                    case 'U':
                        actualValue[i] = 'r';
                        break;
                    case 'I':
                        actualValue[i] = 's';
                        break;
                    case 'N':
                        actualValue[i] = 't';
                        break;
                    case 'D':
                        actualValue[i] = 'u';
                        break;
                    case 'Q':
                        actualValue[i] = 'v';
                        break;
                    case 'A':
                        actualValue[i] = 'w';
                        break;
                    case 'E':
                        actualValue[i] = 'x';
                        break;
                    case 'R':
                        actualValue[i] = 'y';
                        break;
                    case 'T':
                        actualValue[i] = 'z';
                        break;
                    case 'Ą':
                        actualValue[i] = 'ó';
                        break;
                    case 'Ć':
                        actualValue[i] = 'ł';
                        break;
                    case 'Ę':
                        actualValue[i] = 'ź';
                        break;
                    case 'Ł':
                        actualValue[i] = 'ż';
                        break;
                    case 'Ń':
                        actualValue[i] = 'ś';
                        break;
                    case 'Ó':
                        actualValue[i] = 'ć';
                        break;
                    case 'Ź':
                        actualValue[i] = 'ń';
                        break;
                    case 'Ż':
                        actualValue[i] = 'ą';
                        break;
                    default:
                        break;
                }
            }
        }

        for (int i = 0; i < actualValue.length; i++) {
            codeText = jTextArea2.getText() + actualValue[i];
            jTextArea2.setText(codeText);
        }
        System.out.println(" ");

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        if (jRadioButton2.isSelected()) {
            jLabel2.setText("Odkodowany tekst");
            jTextArea2.setText("");
        }
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        if (jRadioButton1.isSelected()) {
            jLabel2.setText("Zakodowany tekst");
            jTextArea2.setText("");
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        String filePath = "code.txt";

        jTextField1.setEditable(true);

        int accessCode[] = new int[4];
        for (int i = 0; i < accessCode.length; i++) {
            int fate = random.nextInt(10);
            accessCode[i] = fate;
        }

        for (int i = 0; i < accessCode.length; i++) {
            randomCode += String.valueOf(accessCode[i]);
        }

        System.out.println("succes");
        File file = new File(filePath);
        try {
            FileWriter fw = new FileWriter(file);

            for (int i = 0; i < accessCode.length; i++) {
                fw.write("" + accessCode[i]);

            }

            fw.close();
        } catch (IOException ex) {
            Logger.getLogger(Haszowanie.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        if (!NumberUtil.isInt(jTextField1.getText())) {
            JOptionPane.showMessageDialog(this, "Źle wprowadzona warotść", "Informacja", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int enteredCodeInt = Integer.parseInt(jTextField1.getText());
        int randomCodeInt = Integer.parseInt(randomCode);

        System.out.println(" ");

        if (enteredCodeInt == randomCodeInt) {
            jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
            jButton3.setEnabled(false);
            jButton4.setEnabled(false);
            jButton5.setEnabled(false);
            jTextArea1.setEnabled(true);
            jTextArea2.setEnabled(true);
            jTextField1.setEnabled(false);
            counter = 3;
            System.out.println("Kod poprawny");
        } else {
            counter -= 1;
            System.out.println("Ilość pozostałych prób " + counter);
            if (counter == 0) {
                System.out.println("Nie masz już prób !");
                System.exit(0);
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String filePath = "code.txt";
        File file = new File(filePath);
        try {
            Scanner scanner = new Scanner(file);
            System.out.println(scanner.nextLine());
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Haszowanie.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Haszowanie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Haszowanie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Haszowanie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Haszowanie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Haszowanie().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

}
